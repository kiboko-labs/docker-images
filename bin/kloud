#!/usr/bin/env php
<?php

if (version_compare(PHP_VERSION, '7.4.0') < 0) {
    throw new RuntimeException('This command requires a minimum version 7.4 for PHP. Please upgrade your PHP version or use the pre-packaged Docker image variant. See https://github.com/kiboko-labs/docker-images/#if-you-want-to-use-the-pre-packaged-docker-image');
}

require __DIR__ . '/../vendor/autoload.php';

use Kiboko\Cloud\Platform\Console\Command;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Output\ConsoleOutput;

$app = new Application('Kiboko Docker Builder');

$app->addCommands([
    (new Command\Images\BuildCommand(
        Command\Images\BuildCommand::$defaultName,
        __DIR__ . '/../config/',
        __DIR__ . '/../environments'
    ))->setAliases(['build', 'wizard']),

    (new Command\Images\PushCommand(
        Command\Images\PushCommand::$defaultName,
        __DIR__ . '/../config/',
        __DIR__ . '/../environments'
    ))->setAliases(['push']),

    (new Command\Images\PullCommand(
        Command\Images\PullCommand::$defaultName,
        __DIR__ . '/../config/',
        __DIR__ . '/../environments'
    ))->setAliases(['pull']),

    (new Command\Images\ListCommand(
        Command\Images\ListCommand::$defaultName,
        __DIR__ . '/../config/'
    ))->setAliases(['which']),

    (new Command\Images\TreeCommand(
        Command\Images\TreeCommand::$defaultName,
        __DIR__ . '/../config/'
    ))->setAliases(['tree']),

    (new Command\Images\TestCommand(
        Command\Images\TestCommand::$defaultName,
        __DIR__ . '/../config/'
    ))->setAliases(['test']),

    (new Command\Stack\InitCommand(
        Command\Stack\InitCommand::$defaultName,
        __DIR__ . '/../config/',
        __DIR__ . '/../compose/',
    ))->setAliases(['init']),

    (new Command\Stack\UpgradeCommand(
        Command\Stack\UpgradeCommand::$defaultName,
        __DIR__ . '/../config/',
        __DIR__ . '/../compose/',
    ))->setAliases(['upgrade']),

    (new Command\Environment\InitCommand(
        Command\Environment\InitCommand::$defaultName,
    )),

    (new Command\Environment\Variable\ListCommand(
        Command\Environment\Variable\ListCommand::$defaultName,
    )),

    (new Command\Environment\Variable\GetCommand(
        Command\Environment\Variable\GetCommand::$defaultName,
    )),

    (new Command\Environment\Variable\SetCommand(
        Command\Environment\Variable\SetCommand::$defaultName,
    )),

    (new Command\Environment\Variable\UnsetCommand(
        Command\Environment\Variable\UnsetCommand::$defaultName,
    )),

    (new Command\Environment\DeployCommand(
        Command\Environment\DeployCommand::$defaultName,
        $app,
    )),

    (new Command\Environment\DestroyCommand(
        Command\Environment\DestroyCommand::$defaultName,
        $app,
    )),

    (new Command\Environment\RsyncCommand(
        Command\Environment\RsyncCommand::$defaultName,
        $app,
    )),
]);

$app->run(new ArgvInput($argv), new ConsoleOutput());
